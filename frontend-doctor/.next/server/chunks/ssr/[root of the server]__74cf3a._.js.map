{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/myPC/shadowveil/frontend-doctor/src/config/apiConfig.ts"],"sourcesContent":["const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"http://localhost:8080/api\";\r\n\r\nexport default API_BASE_URL;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe,QAAQ,GAAG,CAAC,wBAAwB,IAAI;uCAE9C"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/myPC/shadowveil/frontend-doctor/src/data/categories.ts"],"sourcesContent":["\r\nimport axios from \"axios\";\r\nimport API_BASE_URL from \"@/config/apiConfig\";\r\n\r\nexport interface Category {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nexport const fetchCategories = async (): Promise<Category[]> => {\r\n  try {\r\n    console.log(\"Fetching categories from:\", `${API_BASE_URL}/categories`);\r\n    const response = await axios.get(`${API_BASE_URL}/categories`);\r\n    console.log(\"Fetched data:\", response.data);\r\n    return response.data;\r\n\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      console.error(\"❌ Error fetching categories:\", error.response?.data || error.message);\r\n    } else {\r\n      console.error(\"❌ Error fetching categories:\", error);\r\n    }\r\n    throw new Error(\"Failed to load categories\");\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const categories = [\r\n//     {\r\n//       id: \"cardiothoracic\",\r\n//       title: \"Cardiothoracic Surgery\",\r\n//       description: \"Explore surgeries related to the heart and lungs.\",\r\n//       image: \"/images/cardiothoracic.jpg\",\r\n//     },\r\n//     {\r\n//       id: \"orthopedic\",\r\n//       title: \"Orthopedic Surgery\",\r\n//       description: \"Learn about joint replacement and modern orthopedic techniques.\",\r\n//       image: \"/images/orthopedic.jpg\",\r\n//     },\r\n//     {\r\n//       id: \"neurosurgery\",\r\n//       title: \"Neurosurgery\",\r\n//       description: \"Techniques for brain and spinal cord disorders.\",\r\n//       image: \"/images/neurosurgery.jpg\",\r\n//     },\r\n//     {\r\n//       id: \"plastic\",\r\n//       title: \"Plastic Surgery\",\r\n//       description: \"Enhance your skills in reconstructive and cosmetic surgery.\",\r\n//       image: \"/images/plastic.jpg\",\r\n//     },\r\n//     {\r\n//       id: \"pediatric\",\r\n//       title: \"Pediatric Surgery\",\r\n//       description: \"Specialized surgeries for children and infants.\",\r\n//       image: \"/images/pediatric.jpg\",\r\n//     },\r\n//     {\r\n//       id: \"general\",\r\n//       title: \"General Surgery\",\r\n//       description: \"Master foundational surgical techniques and procedures.\",\r\n//       image: \"/images/general.jpg\",\r\n//     },\r\n//   ];\r\n  "],"names":[],"mappings":";;;AAEA;AADA;;;AASO,MAAM,kBAAkB;IAC7B,IAAI;QACF,QAAQ,GAAG,CAAC,6BAA6B,GAAG,0HAAA,CAAA,UAAY,CAAC,WAAW,CAAC;QACrE,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,0HAAA,CAAA,UAAY,CAAC,WAAW,CAAC;QAC7D,QAAQ,GAAG,CAAC,iBAAiB,SAAS,IAAI;QAC1C,OAAO,SAAS,IAAI;IAEtB,EAAE,OAAO,OAAO;QACd,IAAI,qIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,QAAQ;YAC7B,QAAQ,KAAK,CAAC,gCAAgC,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;QACrF,OAAO;YACL,QAAQ,KAAK,CAAC,gCAAgC;QAChD;QACA,MAAM,IAAI,MAAM;IAClB;AACF,GAOA,8BAA8B;CAC9B,QAAQ;CACR,8BAA8B;CAC9B,yCAAyC;CACzC,0EAA0E;CAC1E,6CAA6C;CAC7C,SAAS;CACT,QAAQ;CACR,0BAA0B;CAC1B,qCAAqC;CACrC,wFAAwF;CACxF,yCAAyC;CACzC,SAAS;CACT,QAAQ;CACR,4BAA4B;CAC5B,+BAA+B;CAC/B,wEAAwE;CACxE,2CAA2C;CAC3C,SAAS;CACT,QAAQ;CACR,uBAAuB;CACvB,kCAAkC;CAClC,oFAAoF;CACpF,sCAAsC;CACtC,SAAS;CACT,QAAQ;CACR,yBAAyB;CACzB,oCAAoC;CACpC,wEAAwE;CACxE,wCAAwC;CACxC,SAAS;CACT,QAAQ;CACR,uBAAuB;CACvB,kCAAkC;CAClC,gFAAgF;CAChF,sCAAsC;CACtC,SAAS;CACT,OAAO"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/myPC/shadowveil/frontend-doctor/src/app/test/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { fetchCategories } from \"@/data/categories\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst TestFetch = () => {\r\n  useEffect(() => {\r\n    fetchCategories()\r\n      .then((data) => console.log(\"✅ Categories fetched:\", data))\r\n      .catch((error) => console.error(\"❌ Fetch error:\", error.message));\r\n  }, []);\r\n\r\n  return <p>Check the console for API logs</p>;\r\n};\r\n\r\nexport default TestFetch;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,YAAY;IAChB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,IACX,IAAI,CAAC,CAAC,OAAS,QAAQ,GAAG,CAAC,yBAAyB,OACpD,KAAK,CAAC,CAAC,QAAU,QAAQ,KAAK,CAAC,kBAAkB,MAAM,OAAO;IACnE,GAAG,EAAE;IAEL,qBAAO,8OAAC;kBAAE;;;;;;AACZ;uCAEe"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}