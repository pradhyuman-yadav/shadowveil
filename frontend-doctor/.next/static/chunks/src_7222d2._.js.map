{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/myPC/shadowveil/frontend-doctor/src/components/Layout.tsx"],"sourcesContent":["import Navbar from \"./Navbar\";\r\n\r\nexport default function Layout({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-gray-50\">\r\n      {/* Navbar */}\r\n      <Navbar />\r\n\r\n      {/* Main Content */}\r\n      <main className=\"flex-grow pt-16 px-4\">{children}</main>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"text-center py-4 bg-gray-200\">\r\n        <p>Â© 2025 My Website. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,OAAO,EAAE,QAAQ,EAAiC;IACxE,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BAGP,6LAAC;gBAAK,WAAU;0BAAwB;;;;;;0BAGxC,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAIX;KAfwB"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/myPC/shadowveil/frontend-doctor/src/app/dashboard/profile/edit/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Layout from \"@/components/Layout\";\r\n\r\nexport default function EditProfilePage() {\r\n  const router = useRouter();\r\n\r\n  // Simulated user data (Replace with real API data)\r\n  const [user, setUser] = useState({\r\n    name: \"John Doe\",\r\n    email: \"johndoe@example.com\", // Non-editable email\r\n    profileImage: \"/images/profile-placeholder.png\",\r\n    role: \"Student\",\r\n  });\r\n\r\n  // Password Change State\r\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\r\n  const [passwords, setPasswords] = useState({\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [forgotPassword, setForgotPassword] = useState(false); // Triggers reset password option\r\n\r\n  // Handle Profile Data Changes\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle Password Form Toggle\r\n  const togglePasswordForm = () => {\r\n    setShowPasswordForm(!showPasswordForm);\r\n    setError(\"\");\r\n  };\r\n\r\n  // Handle Password Input Changes\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Simulated Profile Update Handler\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Validate password change only if user entered new password\r\n    if (showPasswordForm) {\r\n      if (!passwords.oldPassword) {\r\n        setError(\"Please enter your current password.\");\r\n        return;\r\n      }\r\n      if (passwords.newPassword.length < 6) {\r\n        setError(\"New password must be at least 6 characters long.\");\r\n        return;\r\n      }\r\n      if (passwords.newPassword !== passwords.confirmPassword) {\r\n        setError(\"New passwords do not match.\");\r\n        return;\r\n      }\r\n      if (passwords.oldPassword !== \"correct-password\") {\r\n        setError(\"Incorrect current password.\");\r\n        setForgotPassword(true); // Show \"Forgot Password?\" option\r\n        return;\r\n      }\r\n    }\r\n\r\n    console.log(\"Updated Profile:\", user);\r\n    console.log(\"Updated Password:\", showPasswordForm ? passwords.newPassword : \"No Change\");\r\n\r\n    alert(\"Profile Updated Successfully!\");\r\n    router.push(\"/dashboard\"); // Redirect to Dashboard\r\n  };\r\n\r\n  // Simulated Password Reset Function\r\n  const handleForgotPassword = () => {\r\n    alert(`A password reset email has been sent to ${user.email}.`);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"max-w-2xl mx-auto bg-white p-6 rounded-lg shadow-md mt-8\">\r\n        <h1 className=\"text-2xl font-bold text-center text-gray-800 mb-6\">Edit Profile</h1>\r\n\r\n        {error && <p className=\"text-red-500 text-center\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {/* Profile Picture */}\r\n          <div className=\"flex flex-col items-center\">\r\n            <img\r\n              src={user.profileImage}\r\n              alt=\"Profile\"\r\n              className=\"w-24 h-24 rounded-full shadow-lg border-4 border-gray-200 mb-3\"\r\n            />\r\n            <label className=\"cursor-pointer bg-blue-500 text-white px-4 py-2 rounded-lg text-sm hover:bg-blue-600 transition\">\r\n              Change Profile Picture\r\n              <input type=\"file\" className=\"hidden\" />\r\n            </label>\r\n          </div>\r\n\r\n          {/* Name */}\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium\">Full Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={user.name}\r\n              onChange={handleChange}\r\n              className=\"w-full border border-gray-300 p-2 rounded-md focus:ring focus:ring-blue-300\"\r\n            />\r\n          </div>\r\n\r\n          {/* Email (Non-Editable) */}\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium\">Email Address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={user.email}\r\n              disabled\r\n              className=\"w-full border border-gray-300 p-2 rounded-md bg-gray-100 cursor-not-allowed\"\r\n            />\r\n          </div>\r\n\r\n          {/* Role (Read-Only) */}\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium\">Role</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"role\"\r\n              value={user.role}\r\n              disabled\r\n              className=\"w-full border border-gray-300 p-2 rounded-md bg-gray-100 cursor-not-allowed\"\r\n            />\r\n          </div>\r\n\r\n          {/* Change Password Button */}\r\n          {!showPasswordForm && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={togglePasswordForm}\r\n              className=\"w-full bg-gray-300 text-gray-800 py-2 rounded-lg font-medium hover:bg-gray-400 transition\"\r\n            >\r\n              Change Password\r\n            </button>\r\n          )}\r\n\r\n          {/* Password Change Fields (When Form is Shown) */}\r\n          {showPasswordForm && (\r\n            <div className=\"border-t pt-4\">\r\n              <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">Change Password</h2>\r\n\r\n              {/* Old Password */}\r\n              <div>\r\n                <label className=\"block text-gray-700 font-medium\">Current Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"oldPassword\"\r\n                  value={passwords.oldPassword}\r\n                  onChange={handlePasswordChange}\r\n                  placeholder=\"Enter current password\"\r\n                  className=\"w-full border border-gray-300 p-2 rounded-md focus:ring focus:ring-blue-300\"\r\n                />\r\n              </div>\r\n\r\n              {/* New Password */}\r\n              <div>\r\n                <label className=\"block text-gray-700 font-medium\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  value={passwords.newPassword}\r\n                  onChange={handlePasswordChange}\r\n                  placeholder=\"Enter new password\"\r\n                  className=\"w-full border border-gray-300 p-2 rounded-md focus:ring focus:ring-blue-300\"\r\n                />\r\n              </div>\r\n\r\n              {/* Confirm Password */}\r\n              <div>\r\n                <label className=\"block text-gray-700 font-medium\">Confirm Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={passwords.confirmPassword}\r\n                  onChange={handlePasswordChange}\r\n                  placeholder=\"Confirm new password\"\r\n                  className=\"w-full border border-gray-300 p-2 rounded-md focus:ring focus:ring-blue-300\"\r\n                />\r\n              </div>\r\n\r\n              {/* Forgot Password? Link */}\r\n              {forgotPassword && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleForgotPassword}\r\n                  className=\"text-blue-500 hover:underline mt-2\"\r\n                >\r\n                  Forgot Password?\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Update Profile Button */}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white py-2 rounded-lg font-medium hover:bg-blue-600 transition\"\r\n          >\r\n            Update Profile\r\n          </button>\r\n\r\n          {/* Cancel Button */}\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => router.push(\"/dashboard\")}\r\n            className=\"w-full bg-gray-300 text-gray-800 py-2 rounded-lg font-medium hover:bg-gray-400 transition mt-2\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}